import { ResourceEventTypes, gumroadRegisterTrigger } from './register-trigger';

const sampleSale = {
  sale_id: '123456789',
  sale_timestamp: '2021-01-01T00:00:00Z',
  order_number: '123456789',
  seller_id: 'The seller',
  product_id: '124145991',
  product_permalink: 'https://gum.co/123456789',
  short_product_id: '12',
  product_name: 'The product name',
  email: 'john@smith.com',
  urlParams: {
    source_url: 'https%3A%2F%2Fgumroad.com%2Fwidgets',
    campaignid: 'c123',
    userid: '456',
    version: '1.4.5',
  },
  full_name: 'John Smith',
  purchaser_id: '123456789',
  subscription_id: '123456789',
  ip_country: 'US',
  price: '10.00',
  recurrence: 'monthly',
  variants: {
    size: 'large',
    color: 'blue',
  },
  test: false,
  is_recurring_charge: false,
  is_preorder_authorization: false,
  license_key: '123456789',
  quantity: 1,
  shipping_rate: '0.00',
  affiliate: '123456789',
};

export const gumroadTriggers = [
  {
    name: 'new_sale',
    eventType: 'sale' as ResourceEventTypes,
    displayName: 'New Sale',
    description: 'Triggered when a new sale is made.',
    sampleData: sampleSale,
  },
  {
    name: 'new_refund',
    eventType: 'refund' as ResourceEventTypes,
    displayName: 'New Refund',
    description: 'Triggered when a refund is made.',
    sampleData: sampleSale,
  },
  {
    name: 'new_dispute',
    eventType: 'dispute' as ResourceEventTypes,
    displayName: 'New Dispute',
    description: 'Triggered when a Dispute is created.',
    sampleData: sampleSale,
  },
  {
    name: 'new_dispute_won',
    eventType: 'dispute_won' as ResourceEventTypes,
    displayName: 'New Dispute Won',
    description: 'Triggered when a Dispute is won.',
    sampleData: sampleSale,
  },
  {
    name: 'subscription_canceled',
    eventType: 'cancellation' as ResourceEventTypes,
    displayName: 'Subscription Canceled',
    description: 'Triggered when a Subscription is canceled.',
    sampleData: sampleSale,
  },
  {
    name: 'subscription_updated',
    eventType: 'subscription_updated' as ResourceEventTypes,
    displayName: 'Subscription Updated',
    description: 'Triggered when a Subscription is updated.',
    sampleData: {
      ...sampleSale,
      type: 'upgrade',
      effective_as_of: '2021-02-23T16:31:44Z',
      old_plan: {
        tier: { id: 'G_-mnBf9b1j9A7a4ub4nFQ==', name: 'Basic tier' },
        recurrence: 'monthly',
        price_cents: '1000',
        quantity: 1,
      },
      new_plan: {
        tier: { id: 'G_-mnBf9b1j9A7a4ub4nFQ==', name: 'Basic tier' },
        recurrence: 'yearly',
        price_cents: '12000',
        quantity: 2,
      },
    },
  },
  {
    name: 'subscription_ended',
    eventType: 'subscription_ended' as ResourceEventTypes,
    displayName: 'Subscription Ended',
    description: 'Triggered when a Subscription is Ended.',
    sampleData: sampleSale,
  },
  {
    name: 'subscription_restarted',
    eventType: 'subscription_restarted' as ResourceEventTypes,
    displayName: 'Subscription Restarted',
    description: 'Triggered when a Subscription is Restarted.',
    sampleData: sampleSale,
  },
].map((props) => gumroadRegisterTrigger(props));
